import { ContextType, Type } from '@nestjs/common';
import {
  HttpArgumentsHost,
  RpcArgumentsHost,
  WsArgumentsHost,
} from '@nestjs/common/interfaces';
import { GqlContextType } from '@nestjs/graphql';
import { Request } from 'express';
import { Session } from 'express-session';
export interface UserSession {
  user: string;
}
export interface GraphQLUserContext {
  getType<TContext extends string = GqlContextType>(): TContext;
  getRoot<T = any>(): T;
  getArgs<T = any>(): T;
  getContext<T = any>(): T;
  getInfo<T = any>(): T;
  setType<TContext extends string = ContextType>(type: TContext): void;
  getClass<T = any>(): Type<T>;
  getHandler(): Function;
  getArgByIndex<T = any>(index: number): T;
  switchToRpc(): RpcArgumentsHost;
  switchToHttp(): HttpArgumentsHost;
  switchToWs(): WsArgumentsHost;
  session: Session & UserSession;
  req: Request;
}

export interface FaceBookAppResponse {
  data: Data;
}

interface Data {
  app_id: string;
  type: string;
  application: string;
  data_access_expires_at: number;
  expires_at: number;
  is_valid: boolean;
  scopes: string[];
  user_id: string;
}

// Generated by https://quicktype.io

export interface FaceBookUserProfile {
  id: string;
  name: string;
  email: string;
  picture: Picture;
}

export interface Picture {
  data: Data;
}

export interface Data {
  height: number;
  is_silhouette: boolean;
  url: string;
  width: number;
}
